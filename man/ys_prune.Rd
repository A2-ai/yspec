% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-yspec.R
\name{ys_prune}
\alias{ys_prune}
\title{Prune a data frame, keeping columns in a yspec object}
\usage{
ys_prune(data, spec, add = NULL, report = FALSE)
}
\arguments{
\item{data}{a data frame with at least one column that is found in \code{spec}}

\item{spec}{a \code{yspec} object}

\item{add}{additional columns to look for; this can be a comma-separated
character string or vector; if specified, these names will be treated like
any other name in \code{spec}, specifically missing names will be silently
ignored unless \code{report} is passed as \code{TRUE}}

\item{report}{if \code{TRUE}, report missing columns}
}
\value{
A data frame with common columns with \code{spec}, in the order they appear
in \code{spec}.
}
\description{
Use this to scavenge a data frame for columns that you want to keep. Do not
use this for final column selection; use \code{\link[dplyr:select]{dplyr::select()}} instead.
}
\details{
An error is generated if there are no columns in common between \code{data} and
\code{spec}.
}
\examples{
data <- ys_help$data()
spec <- ys_help$spec()
data$STUDY <- NULL

head(ys_prune(data, spec))
head(ys_prune(data, spec, report = TRUE))

# Use this for final subsetting
# It will fail if all the columns aren't there
data <- ys_help$data()
head(dplyr::select(data, names(spec)))
 
}
