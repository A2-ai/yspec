% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ys-filter.R
\name{ys_filter}
\alias{ys_filter}
\title{Subset spec items using column values}
\usage{
ys_filter(x, expr, .default = NULL)
}
\arguments{
\item{x}{a yspec object}

\item{expr}{an unquoted expression}

\item{.default}{a named list of default look up values}
}
\value{
A `yspec` object.
}
\description{
The intended use is to subset based on variables define in the `dots` list, 
however some internal column data is also available to query.
}
\details{
The following fields always exist in the spec and are available for 
querying in the filter expression:
- `col`:  column name `<character>`
- `type`: data type `<character>`; either numeric, character, or integer
- `discrete`: discrete data flag `<logical>`; yspec sets this to `TRUE`
  when the `values` field is populated
- `continuous`: continuous dat flag `<logical>`; yspec sets this to `TRUE`
  when the `range` field is populated
- `short`: the short name `<character>`
- `do_lookup`: lookup indicator; yspec sets this to `TRUE` when some or all 
  of the column data is defined by an external lookup file

The following fields will be provided defaults when the filter expression 
is evaluated: 

- `unit`: as specified by the user `<character>`; default value is  ""
- `covariate`: as specified by the user in `dots` `<logical>`; default value
  is `FALSE`

In addition to these fields, you can build the filter expression using 
items in the `dots` field.
}
\examples{
spec <- ys_help$spec()

ys_filter(spec, is.character(decode))

ys_filter(spec, unit == "kg" | type == "character")

}
